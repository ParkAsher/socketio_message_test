<!-- 메시지 폼 -->
<form name="publish">
    <input type="text" name="message" />
    <input type="submit" value="send" />
</form>

<script src="/socket.io/socket.io.js"></script>
<script>
    var socket = io();

    // socket.on 함수로 서버에서 전달하는 신호를 수신
    socket.on('usercount', (count) => {
        console.log('현재 ' + count + '명이 서버에 접속해있습니다.');
    });

    // 폼에 있는 메세지 보내기
    document.forms.publish.onsubmit = function () {
        let outgoingMessage = this.message.value;
        const obj = { type: 'message', params: { value: outgoingMessage }, id: socket.id };
        socket.emit('message', JSON.stringify(obj));
        return false;
    };

    // 들어오는 메세지 핸들링
    socket.on('message', (msg) => {
        let incomingMessage = msg;
        showMessage(incomingMessage);
    });

    socket.on('close', (event) => {
        console.log(`Closed ${event.code}`);
    });

    // dev에 메세지 더하기
    function showMessage(message) {
        let messageElem = document.createElement('div');
        const obj = JSON.parse(message);
        messageElem.textContent = obj.params.value;
        document.getElementById('messages').prepend(messageElem);
    }
</script>

<!-- 수신받을 메시지가 노출될 div -->
<div id="messages"></div>
